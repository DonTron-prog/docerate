{
  "slug": "welcome-to-my-blog",
  "title": "Welcome to My New Website: Backend Decitions for a Python-Powered Static Site",
  "date": "2024-01-15",
  "tags": [
    "python",
    "web-development",
    "static-site",
    "aws"
  ],
  "category": "announcement",
  "description": "Introducing my new site built with a custom static site generator, featuring markdown support, code highlighting, and fast performance.",
  "image": "blog-hero.png",
  "content": "# Welcome\n\nI'd like to introduce you to this new site, powered by a custom-built static site generator. I developed this platform using Python (the language I know best) and chose to host it on AWS S3, aiming for a balance of simplicity and functionality.\n\n## Why I Built My Own Static Site Generator\n\nThere are many excellent options available however I had specific requirements that led me to create my own solution. I wanted a platform that would:\n\n1. Give me complete control over both layout and functionality\n2. Remain minimal and fast without requiring JavaScript frameworks\n3. Integrate seamlessly with my existing AWS infrastructure\n4. Support all the technical blogging features I need\n\n![System Architecture Diagram](system_arch_diagram.png)\n## Key Features\n### Markdown Support\n\nI can write in markdown with comprehensive support for:\n\n- Code blocks with syntax highlighting\n- Tables for structured data\n- Images with automatic optimization\n- Task lists for project tracking\n- Footnotes for additional context[^1]\n\n### Code Highlighting\n\nHere's an example of the Python code that converts markdown to HTML:\n\n```python\ndef parse_markdown(content):\n    \"\"\"Convert markdown content to HTML with extensions.\"\"\"\n    md = markdown.Markdown(extensions=[\n        'codehilite',\n        'tables',\n        'fenced_code',\n        'footnotes',\n        'toc'\n    ])\n    return md.convert(content)\n```\n\n### Table Support\n\nThe system supports GitHub-flavored markdown tables, making it easy to present structured data:\n\n| Feature | Description | Status |\n|---------|-------------|--------|\n| Markdown parsing | Convert .md files to HTML | âœ… Complete |\n| Syntax highlighting | Beautiful code blocks | âœ… Complete |\n| Image optimization | Automatic thumbnail generation | âœ… Complete |\n| Search | Client-side search with JSON index | âœ… Complete |\n| RSS Feed | For feed readers | ðŸš§ Coming soon |\n\n### Task Lists\n\nTrack project progress with task lists:\n\n- [x] Set up Python project structure\n- [x] Implement markdown parser\n- [x] Create responsive templates\n- [x] Add syntax highlighting\n- [ ] Implement RSS feed\n- [ ] Add sitemap generation\n\n## Technical Implementation\n\nThe generator is built with just a few Python dependencies:\n\n```python\n# Core dependencies\nmarkdown==3.5.1          # Markdown parsing\npymdown-extensions==10.5 # Extended markdown features\njinja2==3.1.2           # Template engine\npygments==2.17.2        # Syntax highlighting\npillow==10.2.0          # Image processing\n```\n\n### The Build Process\n\nMy build process follows a straightforward workflow:\n\n1. Parse markdown files with YAML frontmatter\n2. Generate HTML using Jinja2 templates\n3. Optimize images and create thumbnails\n4. Build search index as JSON\n5. Deploy to S3 via GitHub Actions\n![The build process flow](build_process.png)\n### Performance Metrics\n\nThe site performs quite well across several key metrics:\n\n| Metric | Result |\n|--------|--------|\n| Build time | ~1 second for 100 posts |\n| Page size | <50KB including CSS |\n| Time to interactive | <500ms with CDN |\n| Lighthouse score | 100/100 |\n\n## AWS Infrastructure\n\nI've implemented a simple but effective AWS setup:\n\n```yaml\nInfrastructure:\n  Storage: S3 bucket with static hosting\n  CDN: CloudFront for global distribution\n  DNS: Route 53 for domain management\n  Deployment: GitHub Actions CI/CD\n```\n\n## Future Plans\n\nI have several features planned for future development:\n\n1. RSS feed for subscribers\n2. Dark mode toggle\n3. Comments via GitHub discussions\n4. Analytics with privacy-friendly tracking\n5. Newsletter integration\n\n## Source Code Availability\n\nThe entire static site generator is open source. You can use it for your own blog or as inspiration for building your own tools. Check out the [GitHub repository](#) for installation instructions and documentation.\n\n---\n\nThanks for reading. I look forward to sharing more technical content, tutorials, and insights on this platform. Stay tuned for posts about Python, AWS, web development, and more.\n\n[^1]: I love markdown! I can edit it in any application including mobile, it's simple but has all the formatting I need without bloat, and most importantly I can write and edit using keyboard shortcuts like code.",
  "html_content": "<h1 id=\"welcome\">Welcome</h1>\n<p>I&rsquo;d like to introduce you to this new site, powered by a custom-built static site generator. I developed this platform using Python (the language I know best) and chose to host it on AWS S3, aiming for a balance of simplicity and functionality.</p>\n<h2 id=\"why-i-built-my-own-static-site-generator\">Why I Built My Own Static Site Generator</h2>\n<p>There are many excellent options available however I had specific requirements that led me to create my own solution. I wanted a platform that would:</p>\n<ol>\n<li>Give me complete control over both layout and functionality</li>\n<li>Remain minimal and fast without requiring JavaScript frameworks</li>\n<li>Integrate seamlessly with my existing AWS infrastructure</li>\n<li>Support all the technical blogging features I need</li>\n</ol>\n<p><img alt=\"System Architecture Diagram\" src=\"system_arch_diagram.png\" /></p>\n<h2 id=\"key-features\">Key Features</h2>\n<h3 id=\"markdown-support\">Markdown Support</h3>\n<p>I can write in markdown with comprehensive support for:</p>\n<ul>\n<li>Code blocks with syntax highlighting</li>\n<li>Tables for structured data</li>\n<li>Images with automatic optimization</li>\n<li>Task lists for project tracking</li>\n<li>Footnotes for additional context<sup id=\"fnref:1\"><a class=\"footnote-ref\" href=\"#fn:1\">1</a></sup></li>\n</ul>\n<h3 id=\"code-highlighting\">Code Highlighting</h3>\n<p>Here&rsquo;s an example of the Python code that converts markdown to HTML:</p>\n<div class=\"highlight\"><pre><span></span><code><span class=\"k\">def</span> <span class=\"nf\">parse_markdown</span><span class=\"p\">(</span><span class=\"n\">content</span><span class=\"p\">):</span>\n<span class=\"w\">    </span><span class=\"sd\">&quot;&quot;&quot;Convert markdown content to HTML with extensions.&quot;&quot;&quot;</span>\n    <span class=\"n\">md</span> <span class=\"o\">=</span> <span class=\"n\">markdown</span><span class=\"o\">.</span><span class=\"n\">Markdown</span><span class=\"p\">(</span><span class=\"n\">extensions</span><span class=\"o\">=</span><span class=\"p\">[</span>\n        <span class=\"s1\">&#39;codehilite&#39;</span><span class=\"p\">,</span>\n        <span class=\"s1\">&#39;tables&#39;</span><span class=\"p\">,</span>\n        <span class=\"s1\">&#39;fenced_code&#39;</span><span class=\"p\">,</span>\n        <span class=\"s1\">&#39;footnotes&#39;</span><span class=\"p\">,</span>\n        <span class=\"s1\">&#39;toc&#39;</span>\n    <span class=\"p\">])</span>\n    <span class=\"k\">return</span> <span class=\"n\">md</span><span class=\"o\">.</span><span class=\"n\">convert</span><span class=\"p\">(</span><span class=\"n\">content</span><span class=\"p\">)</span>\n</code></pre></div>\n\n<h3 id=\"table-support\">Table Support</h3>\n<p>The system supports GitHub-flavored markdown tables, making it easy to present structured data:</p>\n<table>\n<thead>\n<tr>\n<th>Feature</th>\n<th>Description</th>\n<th>Status</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>Markdown parsing</td>\n<td>Convert .md files to HTML</td>\n<td>âœ… Complete</td>\n</tr>\n<tr>\n<td>Syntax highlighting</td>\n<td>Beautiful code blocks</td>\n<td>âœ… Complete</td>\n</tr>\n<tr>\n<td>Image optimization</td>\n<td>Automatic thumbnail generation</td>\n<td>âœ… Complete</td>\n</tr>\n<tr>\n<td>Search</td>\n<td>Client-side search with JSON index</td>\n<td>âœ… Complete</td>\n</tr>\n<tr>\n<td>RSS Feed</td>\n<td>For feed readers</td>\n<td>ðŸš§ Coming soon</td>\n</tr>\n</tbody>\n</table>\n<h3 id=\"task-lists\">Task Lists</h3>\n<p>Track project progress with task lists:</p>\n<ul>\n<li>[x] Set up Python project structure</li>\n<li>[x] Implement markdown parser</li>\n<li>[x] Create responsive templates</li>\n<li>[x] Add syntax highlighting</li>\n<li>[ ] Implement RSS feed</li>\n<li>[ ] Add sitemap generation</li>\n</ul>\n<h2 id=\"technical-implementation\">Technical Implementation</h2>\n<p>The generator is built with just a few Python dependencies:</p>\n<div class=\"highlight\"><pre><span></span><code><span class=\"c1\"># Core dependencies</span>\n<span class=\"n\">markdown</span><span class=\"o\">==</span><span class=\"mf\">3.5.1</span>          <span class=\"c1\"># Markdown parsing</span>\n<span class=\"n\">pymdown</span><span class=\"o\">-</span><span class=\"n\">extensions</span><span class=\"o\">==</span><span class=\"mf\">10.5</span> <span class=\"c1\"># Extended markdown features</span>\n<span class=\"n\">jinja2</span><span class=\"o\">==</span><span class=\"mf\">3.1.2</span>           <span class=\"c1\"># Template engine</span>\n<span class=\"n\">pygments</span><span class=\"o\">==</span><span class=\"mf\">2.17.2</span>        <span class=\"c1\"># Syntax highlighting</span>\n<span class=\"n\">pillow</span><span class=\"o\">==</span><span class=\"mf\">10.2.0</span>          <span class=\"c1\"># Image processing</span>\n</code></pre></div>\n\n<h3 id=\"the-build-process\">The Build Process</h3>\n<p>My build process follows a straightforward workflow:</p>\n<ol>\n<li>Parse markdown files with YAML frontmatter</li>\n<li>Generate HTML using Jinja2 templates</li>\n<li>Optimize images and create thumbnails</li>\n<li>Build search index as JSON</li>\n<li>Deploy to S3 via GitHub Actions<br />\n<img alt=\"The build process flow\" src=\"build_process.png\" /></li>\n</ol>\n<h3 id=\"performance-metrics\">Performance Metrics</h3>\n<p>The site performs quite well across several key metrics:</p>\n<table>\n<thead>\n<tr>\n<th>Metric</th>\n<th>Result</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>Build time</td>\n<td>~1 second for 100 posts</td>\n</tr>\n<tr>\n<td>Page size</td>\n<td>&lt;50KB including CSS</td>\n</tr>\n<tr>\n<td>Time to interactive</td>\n<td>&lt;500ms with CDN</td>\n</tr>\n<tr>\n<td>Lighthouse score</td>\n<td>100/100</td>\n</tr>\n</tbody>\n</table>\n<h2 id=\"aws-infrastructure\">AWS Infrastructure</h2>\n<p>I&rsquo;ve implemented a simple but effective AWS setup:</p>\n<div class=\"highlight\"><pre><span></span><code><span class=\"nt\">Infrastructure</span><span class=\"p\">:</span>\n<span class=\"w\">  </span><span class=\"nt\">Storage</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"l l-Scalar l-Scalar-Plain\">S3 bucket with static hosting</span>\n<span class=\"w\">  </span><span class=\"nt\">CDN</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"l l-Scalar l-Scalar-Plain\">CloudFront for global distribution</span>\n<span class=\"w\">  </span><span class=\"nt\">DNS</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"l l-Scalar l-Scalar-Plain\">Route 53 for domain management</span>\n<span class=\"w\">  </span><span class=\"nt\">Deployment</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"l l-Scalar l-Scalar-Plain\">GitHub Actions CI/CD</span>\n</code></pre></div>\n\n<h2 id=\"future-plans\">Future Plans</h2>\n<p>I have several features planned for future development:</p>\n<ol>\n<li>RSS feed for subscribers</li>\n<li>Dark mode toggle</li>\n<li>Comments via GitHub discussions</li>\n<li>Analytics with privacy-friendly tracking</li>\n<li>Newsletter integration</li>\n</ol>\n<h2 id=\"source-code-availability\">Source Code Availability</h2>\n<p>The entire static site generator is open source. You can use it for your own blog or as inspiration for building your own tools. Check out the <a href=\"#\">GitHub repository</a> for installation instructions and documentation.</p>\n<hr />\n<p>Thanks for reading. I look forward to sharing more technical content, tutorials, and insights on this platform. Stay tuned for posts about Python, AWS, web development, and more.</p>\n<div class=\"footnote\">\n<hr />\n<ol>\n<li id=\"fn:1\">\n<p>I love markdown! I can edit it in any application including mobile, it&rsquo;s simple but has all the formatting I need without bloat, and most importantly I can write and edit using keyboard shortcuts like code.&#160;<a class=\"footnote-backref\" href=\"#fnref:1\" title=\"Jump back to footnote 1 in the text\">&#8617;</a></p>\n</li>\n</ol>\n</div>",
  "reading_time": 3,
  "excerpt": "Welcome I'd like to introduce you to this new site, powered by a custom-built static site generator. I developed this platform using Python (the language I...",
  "metadata": {}
}